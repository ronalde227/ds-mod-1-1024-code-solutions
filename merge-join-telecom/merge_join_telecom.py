# -*- coding: utf-8 -*-
"""merge_join_telecom.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xe5E7cTJdsVrj7UXYfxyCo-cJQMCvE2V
"""

import pandas as pd

event_type = pd.read_csv("/content/event_type.csv")
log_feature = pd.read_csv("/content/log_feature.csv")
resource_type = pd.read_csv("/content/resource_type.csv")
severity_type = pd.read_csv("/content/severity_type.csv")
train = pd.read_csv("/content/train.csv")

#df = event_type.merge(log_feather, how='inner',on="id")
#df = df.merge(resource_type, how='inner', on='id')
#df = df.merge(severity_type, how='inner', on='id')
#df = df.merge(train, how='inner', on='id')

df = train.merge(event_type, on="id", how="left").merge(log_feature, on="id", how="left").merge(resource_type, on="id", how="left").merge(severity_type, on="id", how="left")

df.info()

"""An inner join returns all the rows from twos set where the two sets(table) have matching parameters. Normally matching id.

An outer join returns all rows from two sets regardless if they have a shared id. Missing features are nulled.

Merge is used to to combine two dataset based of common columns(id)

Join combines dataset based of of indices(rows)
"""

df

rows = len(df)

df1 = df[:(rows//2)]

df2 = df[(rows//2):]

new_df = pd.concat([df1,df2])

df.equals(new_df)

df.info()

df.duplicated(subset=['id']).value_counts()

df = df.drop_duplicates(subset=['id'])

df

df.duplicated().value_counts()