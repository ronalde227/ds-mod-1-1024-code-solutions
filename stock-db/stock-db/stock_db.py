# -*- coding: utf-8 -*-
"""stock-db.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zXuhEwQvfW2MlvffZYTWST0WB-ksDP1P
"""

import sqlite3
import pandas as pd

conn = sqlite3.connect("/content/stocks.sqlite")

tables = conn.execute("SELECT name FROM sqlite_master WHERE type='table'")

tables.fetchall()

answer_cols = conn.execute("PRAGMA table_info(STOCK_DATA)").fetchall()
answer_cols

data = conn.execute("""
                      Select * From STOCK_DATA
                    """).fetchall()

#Questions 1: Create two new tables in the database (stocks.sqlite), one with only 'MSFT' values for the Symbol feature, and one with only 'AAPL' values for the Symbol feature.
MSFT_data = conn.execute("""
                      Select * From STOCK_DATA
                      WHERE Symbol="MSFT"
                    """).fetchall()

AAPL_data = conn.execute("""
                      Select * From STOCK_DATA
                      WHERE Symbol="AAPL"
                    """).fetchall()

df = pd.DataFrame(MSFT_data)

conn.execute("CREATE TABLE MSFT_table(`index`, Date, Open, High, Low, Close, Volume, Adj Close, Symbol)")

conn.executemany("INSERT INTO MSFT_table VALUES(?,?,?,?,?,?,?,?,?)",MSFT_data)

conn.execute("CREATE TABLE AAPL_table(`index`, Date, Open, High, Low, Close, Volume, Adj Close, Symbol)")

conn.executemany("INSERT INTO AAPL_table VALUES(?,?,?,?,?,?,?,?,?)",AAPL_data)

#Question 2: Read the two new new tables in from the database using SQL to check if they were successfully created.
conn.execute("""
                      Select * From MSFT_table
                    """).fetchall()

conn.execute("""
                      Select * From AAPL_table
                    """).fetchall()

#Question 3: For each new table in the database, query for rows containing the Maximum and Minimum dates, and save those rows as new pandas data frames (2 rows per dataframe).

MSFT_max_date = conn.execute("""
                      Select * From MSFT_table
                      WHERE Date=(Select MAX(Date) From MSFT_table)
                    """).fetchall()

MSFT_min_date = conn.execute("""
                      Select * From MSFT_table
                      WHERE Date=(Select MIN(Date) From MSFT_table)
                    """).fetchall()

AAPL_max_date = conn.execute("""
                      Select * From AAPL_table
                      WHERE Date=(Select MAX(Date) From AAPL_table)
                    """).fetchall()

AAPL_min_date = conn.execute("""
                      Select * From AAPL_table
                      WHERE Date=(Select MIN(Date) From AAPL_table)
                    """).fetchall()

type(MSFT_max_date[0])

MSFT_date_df = pd.DataFrame([MSFT_max_date[0],MSFT_min_date[0]],columns=["index", "Date", "Open", "High", "Low","Close", "Volume", "Adj Close", "Symbol"])

MSFT_date_df

AAPL_date_df = pd.DataFrame([AAPL_max_date[0],AAPL_min_date[0]],columns=["index", "Date", "Open", "High", "Low","Close", "Volume", "Adj Close", "Symbol"])

AAPL_date_df

#Question 4: For each new table in the database, query for values greater than 50 in the Open feature, and save those as new pandas data frames.
MSFT_open_50 = conn.execute("""
                      Select * From MSFT_table
                      WHERE Open > 50
                    """).fetchall()

AAPL_open_50 = conn.execute("""
                      Select * From AAPL_table
                      WHERE Open > 50
                    """).fetchall()

MSFT_50_df = pd.DataFrame(MSFT_open_50)
MSFT_50_df

AAPL_50_df = pd.DataFrame(AAPL_open_50)
AAPL_50_df